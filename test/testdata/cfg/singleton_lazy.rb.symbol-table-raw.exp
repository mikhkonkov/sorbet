class <C <U <root>>> < <C <U Object>> () @ (... removed core rbi locs ..., Loc {file=test/testdata/cfg/singleton_lazy.rb start=2:1 end=7:5}, Loc {file=https://github.com/sorbet/sorbet/tree/master/bazel-out/host/genfiles/rbi/procs.rbi start=1:1 end=252:4})
  class <S <C <U <root>>> $1>[<C <U <AttachedClass>>>] < <S <C <U Object>> $1> ()
    method <S <C <U <root>>> $1><N <U <static-init>> $CENSORED> (<blk>) @ Loc {file=test/testdata/cfg/singleton_lazy.rb start=2:1 end=7:5}
      argument <blk><block> @ Loc {file=test/testdata/cfg/singleton_lazy.rb start=??? end=???}
  class <C <U A>> < <C <U Object>> () @ Loc {file=test/testdata/cfg/singleton_lazy.rb start=2:1 end=2:8}
  class <S <C <U A>> $1>[<C <U <AttachedClass>>>] < <S <C <U Object>> $1> () @ Loc {file=test/testdata/cfg/singleton_lazy.rb start=2:7 end=2:8}
    type-member(+) <S <C <U A>> $1><C <U <AttachedClass>>> -> LambdaParam(<S <C <U A>> $1><C <U <AttachedClass>>>, lower=T.noreturn, upper=A) @ Loc {file=test/testdata/cfg/singleton_lazy.rb start=2:7 end=2:8}
    method <S <C <U A>> $1><U <static-init>> (<blk>) @ Loc {file=test/testdata/cfg/singleton_lazy.rb start=2:1 end=3:4}
      argument <blk><block> @ Loc {file=test/testdata/cfg/singleton_lazy.rb start=??? end=???}
  class <C <U Object>> < <C <U BasicObject>> (<C <U Kernel>>) @ Loc {file=https://github.com/sorbet/sorbet/tree/master/rbi/core/object.rbi start=removed end=removed}
    method <C <U Object>><U main> (<blk>) @ Loc {file=test/testdata/cfg/singleton_lazy.rb start=4:1 end=4:9}
      argument <blk><block> @ Loc {file=test/testdata/cfg/singleton_lazy.rb start=??? end=???}

