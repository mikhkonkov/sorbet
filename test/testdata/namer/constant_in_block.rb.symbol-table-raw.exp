class <C <U <root>>> < <C <U Object>> () @ (... removed core rbi locs ..., Loc {file=https://github.com/sorbet/sorbet/tree/master/bazel-out/host/genfiles/rbi/procs.rbi start=1:1 end=252:4})
  class <C <U A>> < <C <U Object>> () @ Loc {file=test/testdata/namer/constant_in_block.rb start=2:1 end=2:8}
    static-field <C <U A>><C <U B>> -> Integer(1) @ Loc {file=test/testdata/namer/constant_in_block.rb start=13:5 end=13:6}
  class <S <C <U A>> $1>[<C <U <AttachedClass>>>] < <S <C <U Object>> $1> () @ Loc {file=test/testdata/namer/constant_in_block.rb start=2:7 end=2:8}
    type-member(+) <S <C <U A>> $1><C <U <AttachedClass>>> -> LambdaParam(<S <C <U A>> $1><C <U <AttachedClass>>>, lower=T.noreturn, upper=A) @ Loc {file=test/testdata/namer/constant_in_block.rb start=2:7 end=2:8}
    method <S <C <U A>> $1><U <static-init>> (<blk>) @ Loc {file=test/testdata/namer/constant_in_block.rb start=2:1 end=16:4}
      argument <blk><block> @ Loc {file=test/testdata/namer/constant_in_block.rb start=??? end=???}
    static-field <S <C <U A>> $1><C <U C>> -> Integer(1) @ Loc {file=test/testdata/namer/constant_in_block.rb start=6:5 end=6:6}
    method <S <C <U A>> $1><U foo> (<blk>) @ Loc {file=test/testdata/namer/constant_in_block.rb start=4:3 end=4:15}
      argument <blk><block> @ Loc {file=test/testdata/namer/constant_in_block.rb start=??? end=???}

